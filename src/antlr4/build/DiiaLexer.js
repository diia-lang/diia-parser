// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,98,679,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,
7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,
99,2,100,7,100,2,101,7,101,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,
10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,
14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,
1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,
19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,
1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,
1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,
1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,
41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,
1,44,1,45,1,45,1,45,1,45,1,46,3,46,477,8,46,1,46,1,46,1,47,1,47,1,47,1,48,
1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,
55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,
1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,
64,1,64,1,64,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,68,
1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,72,1,
72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,
1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,84,1,
85,1,85,1,86,1,86,1,87,1,87,1,87,1,88,1,88,1,88,1,89,1,89,1,89,1,90,1,90,
5,90,601,8,90,10,90,12,90,604,9,90,1,91,1,91,1,91,3,91,609,8,91,1,92,4,92,
612,8,92,11,92,12,92,613,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,94,1,94,4,
94,625,8,94,11,94,12,94,626,1,95,1,95,1,95,5,95,632,8,95,10,95,12,95,635,
9,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,5,96,644,8,96,10,96,12,96,647,9,
96,1,96,1,96,1,97,1,97,1,97,1,97,1,97,1,97,5,97,657,8,97,10,97,12,97,660,
9,97,1,97,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,99,1,99,1,100,1,100,1,100,
3,100,675,8,100,1,101,1,101,1,101,1,658,0,102,1,1,3,2,5,3,7,4,9,5,11,6,13,
7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,
55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,
131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,
76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,
173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,
97,195,98,197,0,199,0,201,0,203,0,1,0,7,2,0,9,9,32,32,2,0,65,70,97,102,2,
0,34,34,92,92,2,0,10,10,13,13,9,0,65,90,95,95,97,122,1028,1028,1030,1031,
1040,1103,1108,1108,1110,1111,1168,1169,3,0,39,39,48,57,700,700,9,0,34,34,
39,39,48,48,92,92,98,98,102,102,110,110,114,114,116,116,689,0,1,1,0,0,0,
0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,
0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,
0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,
0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,
0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,
1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,
0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,
0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,
0,1,205,1,0,0,0,3,212,1,0,0,0,5,216,1,0,0,0,7,226,1,0,0,0,9,236,1,0,0,0,
11,239,1,0,0,0,13,242,1,0,0,0,15,245,1,0,0,0,17,248,1,0,0,0,19,250,1,0,0,
0,21,252,1,0,0,0,23,257,1,0,0,0,25,264,1,0,0,0,27,270,1,0,0,0,29,280,1,0,
0,0,31,291,1,0,0,0,33,296,1,0,0,0,35,299,1,0,0,0,37,301,1,0,0,0,39,309,1,
0,0,0,41,317,1,0,0,0,43,319,1,0,0,0,45,323,1,0,0,0,47,334,1,0,0,0,49,342,
1,0,0,0,51,349,1,0,0,0,53,356,1,0,0,0,55,361,1,0,0,0,57,368,1,0,0,0,59,370,
1,0,0,0,61,376,1,0,0,0,63,383,1,0,0,0,65,389,1,0,0,0,67,399,1,0,0,0,69,408,
1,0,0,0,71,417,1,0,0,0,73,422,1,0,0,0,75,430,1,0,0,0,77,441,1,0,0,0,79,444,
1,0,0,0,81,447,1,0,0,0,83,453,1,0,0,0,85,460,1,0,0,0,87,463,1,0,0,0,89,468,
1,0,0,0,91,471,1,0,0,0,93,476,1,0,0,0,95,480,1,0,0,0,97,483,1,0,0,0,99,486,
1,0,0,0,101,488,1,0,0,0,103,490,1,0,0,0,105,492,1,0,0,0,107,494,1,0,0,0,
109,496,1,0,0,0,111,498,1,0,0,0,113,501,1,0,0,0,115,504,1,0,0,0,117,507,
1,0,0,0,119,510,1,0,0,0,121,513,1,0,0,0,123,517,1,0,0,0,125,520,1,0,0,0,
127,523,1,0,0,0,129,526,1,0,0,0,131,530,1,0,0,0,133,534,1,0,0,0,135,537,
1,0,0,0,137,541,1,0,0,0,139,545,1,0,0,0,141,549,1,0,0,0,143,553,1,0,0,0,
145,555,1,0,0,0,147,557,1,0,0,0,149,559,1,0,0,0,151,561,1,0,0,0,153,563,
1,0,0,0,155,565,1,0,0,0,157,567,1,0,0,0,159,569,1,0,0,0,161,571,1,0,0,0,
163,574,1,0,0,0,165,577,1,0,0,0,167,579,1,0,0,0,169,582,1,0,0,0,171,585,
1,0,0,0,173,587,1,0,0,0,175,589,1,0,0,0,177,592,1,0,0,0,179,595,1,0,0,0,
181,598,1,0,0,0,183,608,1,0,0,0,185,611,1,0,0,0,187,615,1,0,0,0,189,619,
1,0,0,0,191,628,1,0,0,0,193,638,1,0,0,0,195,650,1,0,0,0,197,667,1,0,0,0,
199,669,1,0,0,0,201,674,1,0,0,0,203,676,1,0,0,0,205,206,5,1082,0,0,206,207,
5,1110,0,0,207,208,5,1085,0,0,208,209,5,1077,0,0,209,210,5,1094,0,0,210,
211,5,1100,0,0,211,2,1,0,0,0,212,213,5,1076,0,0,213,214,5,1110,0,0,214,215,
5,1103,0,0,215,4,1,0,0,0,216,217,5,1089,0,0,217,218,5,1090,0,0,218,219,5,
1088,0,0,219,220,5,1091,0,0,220,221,5,1082,0,0,221,222,5,1090,0,0,222,223,
5,1091,0,0,223,224,5,1088,0,0,224,225,5,1072,0,0,225,6,1,0,0,0,226,227,5,
1087,0,0,227,228,5,1077,0,0,228,229,5,1088,0,0,229,230,5,1077,0,0,230,231,
5,1073,0,0,231,232,5,1088,0,0,232,233,5,1072,0,0,233,234,5,1090,0,0,234,
235,5,1080,0,0,235,8,1,0,0,0,236,237,5,61,0,0,237,238,5,61,0,0,238,10,1,
0,0,0,239,240,5,33,0,0,240,241,5,61,0,0,241,12,1,0,0,0,242,243,5,62,0,0,
243,244,5,61,0,0,244,14,1,0,0,0,245,246,5,60,0,0,246,247,5,61,0,0,247,16,
1,0,0,0,248,249,5,62,0,0,249,18,1,0,0,0,250,251,5,60,0,0,251,20,1,0,0,0,
252,253,5,1103,0,0,253,254,5,1082,0,0,254,255,5,1097,0,0,255,256,5,1086,
0,0,256,22,1,0,0,0,257,258,5,1095,0,0,258,259,5,1077,0,0,259,260,5,1082,
0,0,260,261,5,1072,0,0,261,262,5,1090,0,0,262,263,5,1080,0,0,263,24,1,0,
0,0,264,265,5,1074,0,0,265,266,5,1079,0,0,266,267,5,1103,0,0,267,268,5,1090,
0,0,268,269,5,1080,0,0,269,26,1,0,0,0,270,271,5,1074,0,0,271,272,5,1079,
0,0,272,273,5,1103,0,0,273,274,5,1090,0,0,274,275,5,1080,0,0,275,276,5,32,
0,0,276,277,5,1087,0,0,277,278,5,1072,0,0,278,279,5,1082,0,0,279,28,1,0,
0,0,280,281,5,1074,0,0,281,282,5,1079,0,0,282,283,5,1103,0,0,283,284,5,1090,
0,0,284,285,5,1080,0,0,285,286,5,32,0,0,286,287,5,1092,0,0,287,288,5,1072,
0,0,288,289,5,1081,0,0,289,290,5,1083,0,0,290,30,1,0,0,0,291,292,5,1076,
0,0,292,293,5,1072,0,0,293,294,5,1090,0,0,294,295,5,1080,0,0,295,32,1,0,
0,0,296,297,5,1103,0,0,297,298,5,1082,0,0,298,34,1,0,0,0,299,300,5,1108,
0,0,300,36,1,0,0,0,301,302,5,1074,0,0,302,303,5,1077,0,0,303,304,5,1088,
0,0,304,305,5,1085,0,0,305,306,5,1091,0,0,306,307,5,1090,0,0,307,308,5,1080,
0,0,308,38,1,0,0,0,309,310,5,1090,0,0,310,311,5,1088,0,0,311,312,5,1080,
0,0,312,313,5,1074,0,0,313,314,5,1072,0,0,314,315,5,1083,0,0,315,316,5,1072,
0,0,316,40,1,0,0,0,317,318,5,1110,0,0,318,42,1,0,0,0,319,320,5,1072,0,0,
320,321,5,1073,0,0,321,322,5,1086,0,0,322,44,1,0,0,0,323,324,5,1089,0,0,
324,325,5,1087,0,0,325,326,5,1088,0,0,326,327,5,1086,0,0,327,328,5,1073,
0,0,328,329,5,1091,0,0,329,330,5,1074,0,0,330,331,5,1072,0,0,331,332,5,1090,
0,0,332,333,5,1080,0,0,333,46,1,0,0,0,334,335,5,1079,0,0,335,336,5,1083,
0,0,336,337,5,1086,0,0,337,338,5,1074,0,0,338,339,5,1080,0,0,339,340,5,1090,
0,0,340,341,5,1080,0,0,341,48,1,0,0,0,342,343,5,1110,0,0,343,344,5,1085,
0,0,344,345,5,1072,0,0,345,346,5,1082,0,0,346,347,5,1096,0,0,347,348,5,1077,
0,0,348,50,1,0,0,0,349,350,5,1074,0,0,350,351,5,1087,0,0,351,352,5,1072,
0,0,352,353,5,1089,0,0,353,354,5,1090,0,0,354,355,5,1080,0,0,355,52,1,0,
0,0,356,357,5,1087,0,0,357,358,5,1086,0,0,358,359,5,1082,0,0,359,360,5,1080,
0,0,360,54,1,0,0,0,361,362,5,1084,0,0,362,363,5,1086,0,0,363,364,5,1076,
0,0,364,365,5,1091,0,0,365,366,5,1083,0,0,366,367,5,1100,0,0,367,56,1,0,
0,0,368,369,5,63,0,0,369,58,1,0,0,0,370,371,5,1088,0,0,371,372,5,1110,0,
0,372,373,5,1074,0,0,373,374,5,1085,0,0,374,375,5,1086,0,0,375,60,1,0,0,
0,376,377,5,1073,0,0,377,378,5,1110,0,0,378,379,5,1083,0,0,379,380,5,1100,
0,0,380,381,5,1096,0,0,381,382,5,1077,0,0,382,62,1,0,0,0,383,384,5,1084,
0,0,384,385,5,1077,0,0,385,386,5,1085,0,0,386,387,5,1096,0,0,387,388,5,1077,
0,0,388,64,1,0,0,0,389,390,5,1085,0,0,390,391,5,1077,0,0,391,392,5,32,0,
0,392,393,5,1073,0,0,393,394,5,1110,0,0,394,395,5,1083,0,0,395,396,5,1100,
0,0,396,397,5,1096,0,0,397,398,5,1077,0,0,398,66,1,0,0,0,399,400,5,1085,
0,0,400,401,5,1077,0,0,401,402,5,32,0,0,402,403,5,1084,0,0,403,404,5,1077,
0,0,404,405,5,1085,0,0,405,406,5,1096,0,0,406,407,5,1077,0,0,407,68,1,0,
0,0,408,409,5,1085,0,0,409,410,5,1077,0,0,410,411,5,32,0,0,411,412,5,1088,
0,0,412,413,5,1110,0,0,413,414,5,1074,0,0,414,415,5,1085,0,0,415,416,5,1086,
0,0,416,70,1,0,0,0,417,418,5,1085,0,0,418,419,5,1077,0,0,419,420,5,32,0,
0,420,421,5,1108,0,0,421,72,1,0,0,0,422,423,5,1084,0,0,423,424,5,1110,0,
0,424,425,5,1089,0,0,425,426,5,1090,0,0,426,427,5,1080,0,0,427,428,5,1090,
0,0,428,429,5,1100,0,0,429,74,1,0,0,0,430,431,5,1085,0,0,431,432,5,1077,
0,0,432,433,5,32,0,0,433,434,5,1084,0,0,434,435,5,1110,0,0,435,436,5,1089,
0,0,436,437,5,1090,0,0,437,438,5,1080,0,0,438,439,5,1090,0,0,439,440,5,1100,
0,0,440,76,1,0,0,0,441,442,5,1085,0,0,442,443,5,1077,0,0,443,78,1,0,0,0,
444,445,5,46,0,0,445,446,5,42,0,0,446,80,1,0,0,0,447,448,5,1084,0,0,448,
449,5,1072,0,0,449,450,5,1082,0,0,450,451,5,1077,0,0,451,452,5,1090,0,0,
452,82,1,0,0,0,453,454,5,1074,0,0,454,455,5,1090,0,0,455,456,5,1110,0,0,
456,457,5,1083,0,0,457,458,5,1102,0,0,458,459,5,1108,0,0,459,84,1,0,0,0,
460,461,5,106,0,0,461,462,5,115,0,0,462,86,1,0,0,0,463,464,5,1082,0,0,464,
465,5,1086,0,0,465,466,5,1083,0,0,466,467,5,1080,0,0,467,88,1,0,0,0,468,
469,5,1090,0,0,469,470,5,1072,0,0,470,90,1,0,0,0,471,472,7,0,0,0,472,473,
1,0,0,0,473,474,6,45,0,0,474,92,1,0,0,0,475,477,5,13,0,0,476,475,1,0,0,0,
476,477,1,0,0,0,477,478,1,0,0,0,478,479,5,10,0,0,479,94,1,0,0,0,480,481,
5,45,0,0,481,482,5,45,0,0,482,96,1,0,0,0,483,484,5,43,0,0,484,485,5,43,0,
0,485,98,1,0,0,0,486,487,5,40,0,0,487,100,1,0,0,0,488,489,5,41,0,0,489,102,
1,0,0,0,490,491,5,91,0,0,491,104,1,0,0,0,492,493,5,93,0,0,493,106,1,0,0,
0,494,495,5,44,0,0,495,108,1,0,0,0,496,497,5,61,0,0,497,110,1,0,0,0,498,
499,5,58,0,0,499,500,5,61,0,0,500,112,1,0,0,0,501,502,5,43,0,0,502,503,5,
61,0,0,503,114,1,0,0,0,504,505,5,45,0,0,505,506,5,61,0,0,506,116,1,0,0,0,
507,508,5,42,0,0,508,509,5,61,0,0,509,118,1,0,0,0,510,511,5,47,0,0,511,512,
5,61,0,0,512,120,1,0,0,0,513,514,5,47,0,0,514,515,5,47,0,0,515,516,5,61,
0,0,516,122,1,0,0,0,517,518,5,37,0,0,518,519,5,61,0,0,519,124,1,0,0,0,520,
521,5,124,0,0,521,522,5,61,0,0,522,126,1,0,0,0,523,524,5,38,0,0,524,525,
5,61,0,0,525,128,1,0,0,0,526,527,5,60,0,0,527,528,5,60,0,0,528,529,5,61,
0,0,529,130,1,0,0,0,530,531,5,62,0,0,531,532,5,62,0,0,532,533,5,61,0,0,533,
132,1,0,0,0,534,535,5,94,0,0,535,536,5,61,0,0,536,134,1,0,0,0,537,538,5,
42,0,0,538,539,5,42,0,0,539,540,5,61,0,0,540,136,1,0,0,0,541,542,5,124,0,
0,542,543,5,124,0,0,543,544,5,61,0,0,544,138,1,0,0,0,545,546,5,38,0,0,546,
547,5,38,0,0,547,548,5,61,0,0,548,140,1,0,0,0,549,550,5,63,0,0,550,551,5,
63,0,0,551,552,5,61,0,0,552,142,1,0,0,0,553,554,5,43,0,0,554,144,1,0,0,0,
555,556,5,45,0,0,556,146,1,0,0,0,557,558,5,42,0,0,558,148,1,0,0,0,559,560,
5,47,0,0,560,150,1,0,0,0,561,562,5,58,0,0,562,152,1,0,0,0,563,564,5,46,0,
0,564,154,1,0,0,0,565,566,5,33,0,0,566,156,1,0,0,0,567,568,5,126,0,0,568,
158,1,0,0,0,569,570,5,37,0,0,570,160,1,0,0,0,571,572,5,47,0,0,572,573,5,
47,0,0,573,162,1,0,0,0,574,575,5,42,0,0,575,576,5,42,0,0,576,164,1,0,0,0,
577,578,5,94,0,0,578,166,1,0,0,0,579,580,5,124,0,0,580,581,5,124,0,0,581,
168,1,0,0,0,582,583,5,38,0,0,583,584,5,38,0,0,584,170,1,0,0,0,585,586,5,
124,0,0,586,172,1,0,0,0,587,588,5,38,0,0,588,174,1,0,0,0,589,590,5,60,0,
0,590,591,5,60,0,0,591,176,1,0,0,0,592,593,5,62,0,0,593,594,5,62,0,0,594,
178,1,0,0,0,595,596,5,48,0,0,596,597,5,120,0,0,597,180,1,0,0,0,598,602,3,
199,99,0,599,601,3,201,100,0,600,599,1,0,0,0,601,604,1,0,0,0,602,600,1,0,
0,0,602,603,1,0,0,0,603,182,1,0,0,0,604,602,1,0,0,0,605,609,3,187,93,0,606,
609,3,185,92,0,607,609,3,189,94,0,608,605,1,0,0,0,608,606,1,0,0,0,608,607,
1,0,0,0,609,184,1,0,0,0,610,612,3,197,98,0,611,610,1,0,0,0,612,613,1,0,0,
0,613,611,1,0,0,0,613,614,1,0,0,0,614,186,1,0,0,0,615,616,3,185,92,0,616,
617,5,46,0,0,617,618,3,185,92,0,618,188,1,0,0,0,619,620,5,48,0,0,620,621,
5,120,0,0,621,624,1,0,0,0,622,625,3,197,98,0,623,625,7,1,0,0,624,622,1,0,
0,0,624,623,1,0,0,0,625,626,1,0,0,0,626,624,1,0,0,0,626,627,1,0,0,0,627,
190,1,0,0,0,628,633,5,34,0,0,629,632,8,2,0,0,630,632,3,203,101,0,631,629,
1,0,0,0,631,630,1,0,0,0,632,635,1,0,0,0,633,631,1,0,0,0,633,634,1,0,0,0,
634,636,1,0,0,0,635,633,1,0,0,0,636,637,5,34,0,0,637,192,1,0,0,0,638,639,
5,59,0,0,639,640,5,59,0,0,640,645,1,0,0,0,641,644,3,193,96,0,642,644,8,3,
0,0,643,641,1,0,0,0,643,642,1,0,0,0,644,647,1,0,0,0,645,643,1,0,0,0,645,
646,1,0,0,0,646,648,1,0,0,0,647,645,1,0,0,0,648,649,6,96,0,0,649,194,1,0,
0,0,650,651,5,59,0,0,651,652,5,45,0,0,652,653,5,45,0,0,653,658,1,0,0,0,654,
657,3,195,97,0,655,657,9,0,0,0,656,654,1,0,0,0,656,655,1,0,0,0,657,660,1,
0,0,0,658,659,1,0,0,0,658,656,1,0,0,0,659,661,1,0,0,0,660,658,1,0,0,0,661,
662,5,45,0,0,662,663,5,45,0,0,663,664,5,59,0,0,664,665,1,0,0,0,665,666,6,
97,0,0,666,196,1,0,0,0,667,668,2,48,57,0,668,198,1,0,0,0,669,670,7,4,0,0,
670,200,1,0,0,0,671,675,3,199,99,0,672,675,7,5,0,0,673,675,3,199,99,0,674,
671,1,0,0,0,674,672,1,0,0,0,674,673,1,0,0,0,675,202,1,0,0,0,676,677,5,92,
0,0,677,678,7,6,0,0,678,204,1,0,0,0,14,0,476,602,608,613,624,626,631,633,
643,645,656,658,674,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class DiiaLexer extends antlr4.Lexer {

    static grammarFileName = "DiiaLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'\\u043A\\u0456\\u043D\\u0435\\u0446\\u044C'", 
                         "'\\u0434\\u0456\\u044F'", "'\\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u0443\\u0440\\u0430'", 
                         "'\\u043F\\u0435\\u0440\\u0435\\u0431\\u0440\\u0430\\u0442\\u0438'", 
                         "'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'\\u044F\\u043A\\u0449\\u043E'", 
                         "'\\u0447\\u0435\\u043A\\u0430\\u0442\\u0438'", 
                         "'\\u0432\\u0437\\u044F\\u0442\\u0438'", "'\\u0432\\u0437\\u044F\\u0442\\u0438 \\u043F\\u0430\\u043A'", 
                         "'\\u0432\\u0437\\u044F\\u0442\\u0438 \\u0444\\u0430\\u0439\\u043B'", 
                         "'\\u0434\\u0430\\u0442\\u0438'", "'\\u044F\\u043A'", 
                         "'\\u0454'", "'\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u0438'", 
                         "'\\u0442\\u0440\\u0438\\u0432\\u0430\\u043B\\u0430'", 
                         "'\\u0456'", "'\\u0430\\u0431\\u043E'", "'\\u0441\\u043F\\u0440\\u043E\\u0431\\u0443\\u0432\\u0430\\u0442\\u0438'", 
                         "'\\u0437\\u043B\\u043E\\u0432\\u0438\\u0442\\u0438'", 
                         "'\\u0456\\u043D\\u0430\\u043A\\u0448\\u0435'", 
                         "'\\u0432\\u043F\\u0430\\u0441\\u0442\\u0438'", 
                         "'\\u043F\\u043E\\u043A\\u0438'", "'\\u043C\\u043E\\u0434\\u0443\\u043B\\u044C'", 
                         "'?'", "'\\u0440\\u0456\\u0432\\u043D\\u043E'", 
                         "'\\u0431\\u0456\\u043B\\u044C\\u0448\\u0435'", 
                         "'\\u043C\\u0435\\u043D\\u0448\\u0435'", "'\\u043D\\u0435 \\u0431\\u0456\\u043B\\u044C\\u0448\\u0435'", 
                         "'\\u043D\\u0435 \\u043C\\u0435\\u043D\\u0448\\u0435'", 
                         "'\\u043D\\u0435 \\u0440\\u0456\\u0432\\u043D\\u043E'", 
                         "'\\u043D\\u0435 \\u0454'", "'\\u043C\\u0456\\u0441\\u0442\\u0438\\u0442\\u044C'", 
                         "'\\u043D\\u0435 \\u043C\\u0456\\u0441\\u0442\\u0438\\u0442\\u044C'", 
                         "'\\u043D\\u0435'", "'.*'", "'\\u043C\\u0430\\u043A\\u0435\\u0442'", 
                         "'\\u0432\\u0442\\u0456\\u043B\\u044E\\u0454'", 
                         "'js'", "'\\u043A\\u043E\\u043B\\u0438'", "'\\u0442\\u0430'", 
                         null, null, "'--'", "'++'", "'('", "')'", "'['", 
                         "']'", "','", "'='", "':='", "'+='", "'-='", "'*='", 
                         "'/='", "'//='", "'%='", "'|='", "'&='", "'<<='", 
                         "'>>='", "'^='", "'**='", "'||='", "'&&='", "'??='", 
                         "'+'", "'-'", "'*'", "'/'", "':'", "'.'", "'!'", 
                         "'~'", "'%'", "'//'", "'**'", "'^'", "'||'", "'&&'", 
                         "'|'", "'&'", "'<<'", "'>>'", "'0x'" ];
	static symbolicNames = [ null, "END", "DIIA", "STRUCTURE", "FOR", "EQ", 
                          "NOT_EQ", "GREATER_EQ", "SMALLER_EQ", "GREATER", 
                          "SMALLER", "IF", "WAIT", "TAKE", "TAKE_PAK", "TAKE_FILE", 
                          "GIVE", "AS", "IS", "RETURN", "ASYNC", "AND", 
                          "OR", "TRY", "CATCH", "ELSE", "THROW", "WHILE", 
                          "MODULE", "TERNARY", "EQ_WORD", "GR_WORD", "SM_WORD", 
                          "NOT_GR_WORD", "NOT_SM_WORD", "NOT_EQ_WORD", "NOT_IS_WORD", 
                          "HAS_IS_WORD", "NOT_HAS_IS_WORD", "NOT_WORD", 
                          "STAR_ALL", "MOCKUP", "IMPLEMENTS", "EVAL", "WHEN", 
                          "TA", "SKIP_SPACES", "NL", "DECREMENT", "INCREMENT", 
                          "OPEN_PAREN", "CLOSE_PAREN", "OPEN_ARRAY", "CLOSE_ARRAY", 
                          "COMMA", "ASSIGN", "ASSIGN_PARENT", "ASSIGN_ADD", 
                          "ASSIGN_SUB", "ASSIGN_MUL", "ASSIGN_DIV", "ASSIGN_DIVDIV", 
                          "ASSIGN_MOD", "ASSIGN_BW_OR", "ASSIGN_BW_AND", 
                          "ASSIGN_BW_SHIFT_LEFT", "ASSIGN_BW_SHIFT_RIGHT", 
                          "ASSIGN_XOR", "ASSIGN_POW", "ASSIGN_OR", "ASSIGN_AND", 
                          "ASSIGN_IF", "PLUS", "MINUS", "MUL", "DIV", "COLON", 
                          "DOT", "NOT", "TILDA", "PERCENT", "DIVDIV", "POW", 
                          "XOR", "OR_SYM", "AND_SYM", "OR_BW", "AND_BW", 
                          "BW_SHIFT_LEFT", "BW_SHIFT_RIGHT", "HEX_START", 
                          "ID", "NUMBER", "INTEGER", "FLOAT", "HEX", "STRING", 
                          "LINE_COMMENT", "COMMENT" ];
	static ruleNames = [ "END", "DIIA", "STRUCTURE", "FOR", "EQ", "NOT_EQ", 
                      "GREATER_EQ", "SMALLER_EQ", "GREATER", "SMALLER", 
                      "IF", "WAIT", "TAKE", "TAKE_PAK", "TAKE_FILE", "GIVE", 
                      "AS", "IS", "RETURN", "ASYNC", "AND", "OR", "TRY", 
                      "CATCH", "ELSE", "THROW", "WHILE", "MODULE", "TERNARY", 
                      "EQ_WORD", "GR_WORD", "SM_WORD", "NOT_GR_WORD", "NOT_SM_WORD", 
                      "NOT_EQ_WORD", "NOT_IS_WORD", "HAS_IS_WORD", "NOT_HAS_IS_WORD", 
                      "NOT_WORD", "STAR_ALL", "MOCKUP", "IMPLEMENTS", "EVAL", 
                      "WHEN", "TA", "SKIP_SPACES", "NL", "DECREMENT", "INCREMENT", 
                      "OPEN_PAREN", "CLOSE_PAREN", "OPEN_ARRAY", "CLOSE_ARRAY", 
                      "COMMA", "ASSIGN", "ASSIGN_PARENT", "ASSIGN_ADD", 
                      "ASSIGN_SUB", "ASSIGN_MUL", "ASSIGN_DIV", "ASSIGN_DIVDIV", 
                      "ASSIGN_MOD", "ASSIGN_BW_OR", "ASSIGN_BW_AND", "ASSIGN_BW_SHIFT_LEFT", 
                      "ASSIGN_BW_SHIFT_RIGHT", "ASSIGN_XOR", "ASSIGN_POW", 
                      "ASSIGN_OR", "ASSIGN_AND", "ASSIGN_IF", "PLUS", "MINUS", 
                      "MUL", "DIV", "COLON", "DOT", "NOT", "TILDA", "PERCENT", 
                      "DIVDIV", "POW", "XOR", "OR_SYM", "AND_SYM", "OR_BW", 
                      "AND_BW", "BW_SHIFT_LEFT", "BW_SHIFT_RIGHT", "HEX_START", 
                      "ID", "NUMBER", "INTEGER", "FLOAT", "HEX", "STRING", 
                      "LINE_COMMENT", "COMMENT", "DIGIT", "ID_START", "ID_CONTINUE", 
                      "ESCAPE_CHAR" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

DiiaLexer.EOF = antlr4.Token.EOF;
DiiaLexer.END = 1;
DiiaLexer.DIIA = 2;
DiiaLexer.STRUCTURE = 3;
DiiaLexer.FOR = 4;
DiiaLexer.EQ = 5;
DiiaLexer.NOT_EQ = 6;
DiiaLexer.GREATER_EQ = 7;
DiiaLexer.SMALLER_EQ = 8;
DiiaLexer.GREATER = 9;
DiiaLexer.SMALLER = 10;
DiiaLexer.IF = 11;
DiiaLexer.WAIT = 12;
DiiaLexer.TAKE = 13;
DiiaLexer.TAKE_PAK = 14;
DiiaLexer.TAKE_FILE = 15;
DiiaLexer.GIVE = 16;
DiiaLexer.AS = 17;
DiiaLexer.IS = 18;
DiiaLexer.RETURN = 19;
DiiaLexer.ASYNC = 20;
DiiaLexer.AND = 21;
DiiaLexer.OR = 22;
DiiaLexer.TRY = 23;
DiiaLexer.CATCH = 24;
DiiaLexer.ELSE = 25;
DiiaLexer.THROW = 26;
DiiaLexer.WHILE = 27;
DiiaLexer.MODULE = 28;
DiiaLexer.TERNARY = 29;
DiiaLexer.EQ_WORD = 30;
DiiaLexer.GR_WORD = 31;
DiiaLexer.SM_WORD = 32;
DiiaLexer.NOT_GR_WORD = 33;
DiiaLexer.NOT_SM_WORD = 34;
DiiaLexer.NOT_EQ_WORD = 35;
DiiaLexer.NOT_IS_WORD = 36;
DiiaLexer.HAS_IS_WORD = 37;
DiiaLexer.NOT_HAS_IS_WORD = 38;
DiiaLexer.NOT_WORD = 39;
DiiaLexer.STAR_ALL = 40;
DiiaLexer.MOCKUP = 41;
DiiaLexer.IMPLEMENTS = 42;
DiiaLexer.EVAL = 43;
DiiaLexer.WHEN = 44;
DiiaLexer.TA = 45;
DiiaLexer.SKIP_SPACES = 46;
DiiaLexer.NL = 47;
DiiaLexer.DECREMENT = 48;
DiiaLexer.INCREMENT = 49;
DiiaLexer.OPEN_PAREN = 50;
DiiaLexer.CLOSE_PAREN = 51;
DiiaLexer.OPEN_ARRAY = 52;
DiiaLexer.CLOSE_ARRAY = 53;
DiiaLexer.COMMA = 54;
DiiaLexer.ASSIGN = 55;
DiiaLexer.ASSIGN_PARENT = 56;
DiiaLexer.ASSIGN_ADD = 57;
DiiaLexer.ASSIGN_SUB = 58;
DiiaLexer.ASSIGN_MUL = 59;
DiiaLexer.ASSIGN_DIV = 60;
DiiaLexer.ASSIGN_DIVDIV = 61;
DiiaLexer.ASSIGN_MOD = 62;
DiiaLexer.ASSIGN_BW_OR = 63;
DiiaLexer.ASSIGN_BW_AND = 64;
DiiaLexer.ASSIGN_BW_SHIFT_LEFT = 65;
DiiaLexer.ASSIGN_BW_SHIFT_RIGHT = 66;
DiiaLexer.ASSIGN_XOR = 67;
DiiaLexer.ASSIGN_POW = 68;
DiiaLexer.ASSIGN_OR = 69;
DiiaLexer.ASSIGN_AND = 70;
DiiaLexer.ASSIGN_IF = 71;
DiiaLexer.PLUS = 72;
DiiaLexer.MINUS = 73;
DiiaLexer.MUL = 74;
DiiaLexer.DIV = 75;
DiiaLexer.COLON = 76;
DiiaLexer.DOT = 77;
DiiaLexer.NOT = 78;
DiiaLexer.TILDA = 79;
DiiaLexer.PERCENT = 80;
DiiaLexer.DIVDIV = 81;
DiiaLexer.POW = 82;
DiiaLexer.XOR = 83;
DiiaLexer.OR_SYM = 84;
DiiaLexer.AND_SYM = 85;
DiiaLexer.OR_BW = 86;
DiiaLexer.AND_BW = 87;
DiiaLexer.BW_SHIFT_LEFT = 88;
DiiaLexer.BW_SHIFT_RIGHT = 89;
DiiaLexer.HEX_START = 90;
DiiaLexer.ID = 91;
DiiaLexer.NUMBER = 92;
DiiaLexer.INTEGER = 93;
DiiaLexer.FLOAT = 94;
DiiaLexer.HEX = 95;
DiiaLexer.STRING = 96;
DiiaLexer.LINE_COMMENT = 97;
DiiaLexer.COMMENT = 98;



