// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,105,753,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,
2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,
7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,
34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,
48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,
77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,
92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,
7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
105,2,106,7,106,2,107,7,107,2,108,7,108,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,
1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,
1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,
18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,
1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,
23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
27,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,
32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,
1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,
36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
1,42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,
46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,3,49,506,8,49,1,49,1,49,
1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,
56,1,56,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,
1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,65,1,65,1,65,1,
66,1,66,1,66,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,70,
1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,
73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,
1,81,1,81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,86,1,86,1,
86,1,87,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,90,1,91,1,91,1,91,1,92,
1,92,1,92,1,93,1,93,5,93,630,8,93,10,93,12,93,633,9,93,1,94,1,94,1,94,1,
94,1,94,1,94,3,94,641,8,94,1,95,4,95,644,8,95,11,95,12,95,645,1,96,1,96,
1,96,1,96,1,97,1,97,1,97,1,97,1,97,4,97,657,8,97,11,97,12,97,658,1,98,1,
98,1,98,1,98,1,98,4,98,666,8,98,11,98,12,98,667,1,99,1,99,1,99,1,99,4,99,
674,8,99,11,99,12,99,675,1,100,1,100,1,100,1,100,4,100,682,8,100,11,100,
12,100,683,1,101,1,101,1,101,5,101,689,8,101,10,101,12,101,692,9,101,1,101,
1,101,1,102,1,102,1,102,1,102,1,102,1,102,5,102,702,8,102,10,102,12,102,
705,9,102,1,102,1,102,1,102,1,102,1,102,1,102,1,103,1,103,1,103,1,103,1,
103,5,103,718,8,103,10,103,12,103,721,9,103,1,103,1,103,1,104,1,104,1,104,
1,104,1,104,1,104,5,104,731,8,104,10,104,12,104,734,9,104,1,104,1,104,1,
104,1,104,1,104,1,104,1,105,1,105,1,106,1,106,1,107,1,107,1,107,3,107,749,
8,107,1,108,1,108,1,108,2,703,732,0,109,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,
56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,
133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,
77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,
175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,
98,197,99,199,100,201,101,203,102,205,103,207,104,209,105,211,0,213,0,215,
0,217,0,1,0,8,2,0,9,9,32,32,2,0,65,70,97,102,3,0,1040,1044,1072,1076,1168,
1169,2,0,34,34,92,92,2,0,10,10,13,13,9,0,65,90,95,95,97,122,1028,1028,1030,
1031,1040,1103,1108,1108,1110,1111,1168,1169,3,0,39,39,48,57,700,700,9,0,
34,34,39,39,48,48,92,92,98,98,102,102,110,110,114,114,116,116,772,0,1,1,
0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,
0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,
0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,
1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,
0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,
0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,
0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,
0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,
175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,
1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,
0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,
0,0,0,207,1,0,0,0,0,209,1,0,0,0,1,219,1,0,0,0,3,226,1,0,0,0,5,230,1,0,0,
0,7,240,1,0,0,0,9,250,1,0,0,0,11,253,1,0,0,0,13,256,1,0,0,0,15,259,1,0,0,
0,17,262,1,0,0,0,19,264,1,0,0,0,21,266,1,0,0,0,23,271,1,0,0,0,25,278,1,0,
0,0,27,284,1,0,0,0,29,294,1,0,0,0,31,305,1,0,0,0,33,310,1,0,0,0,35,313,1,
0,0,0,37,315,1,0,0,0,39,323,1,0,0,0,41,331,1,0,0,0,43,333,1,0,0,0,45,337,
1,0,0,0,47,348,1,0,0,0,49,356,1,0,0,0,51,363,1,0,0,0,53,370,1,0,0,0,55,375,
1,0,0,0,57,382,1,0,0,0,59,384,1,0,0,0,61,390,1,0,0,0,63,397,1,0,0,0,65,403,
1,0,0,0,67,413,1,0,0,0,69,422,1,0,0,0,71,431,1,0,0,0,73,436,1,0,0,0,75,444,
1,0,0,0,77,455,1,0,0,0,79,458,1,0,0,0,81,464,1,0,0,0,83,471,1,0,0,0,85,479,
1,0,0,0,87,482,1,0,0,0,89,487,1,0,0,0,91,490,1,0,0,0,93,494,1,0,0,0,95,497,
1,0,0,0,97,500,1,0,0,0,99,505,1,0,0,0,101,509,1,0,0,0,103,512,1,0,0,0,105,
515,1,0,0,0,107,517,1,0,0,0,109,519,1,0,0,0,111,521,1,0,0,0,113,523,1,0,
0,0,115,525,1,0,0,0,117,527,1,0,0,0,119,530,1,0,0,0,121,533,1,0,0,0,123,
536,1,0,0,0,125,539,1,0,0,0,127,542,1,0,0,0,129,546,1,0,0,0,131,549,1,0,
0,0,133,552,1,0,0,0,135,555,1,0,0,0,137,559,1,0,0,0,139,563,1,0,0,0,141,
566,1,0,0,0,143,570,1,0,0,0,145,574,1,0,0,0,147,578,1,0,0,0,149,582,1,0,
0,0,151,584,1,0,0,0,153,586,1,0,0,0,155,588,1,0,0,0,157,590,1,0,0,0,159,
592,1,0,0,0,161,594,1,0,0,0,163,596,1,0,0,0,165,598,1,0,0,0,167,600,1,0,
0,0,169,603,1,0,0,0,171,606,1,0,0,0,173,608,1,0,0,0,175,611,1,0,0,0,177,
614,1,0,0,0,179,616,1,0,0,0,181,618,1,0,0,0,183,621,1,0,0,0,185,624,1,0,
0,0,187,627,1,0,0,0,189,640,1,0,0,0,191,643,1,0,0,0,193,647,1,0,0,0,195,
651,1,0,0,0,197,660,1,0,0,0,199,669,1,0,0,0,201,677,1,0,0,0,203,685,1,0,
0,0,205,695,1,0,0,0,207,712,1,0,0,0,209,724,1,0,0,0,211,741,1,0,0,0,213,
743,1,0,0,0,215,748,1,0,0,0,217,750,1,0,0,0,219,220,5,1082,0,0,220,221,5,
1110,0,0,221,222,5,1085,0,0,222,223,5,1077,0,0,223,224,5,1094,0,0,224,225,
5,1100,0,0,225,2,1,0,0,0,226,227,5,1076,0,0,227,228,5,1110,0,0,228,229,5,
1103,0,0,229,4,1,0,0,0,230,231,5,1089,0,0,231,232,5,1090,0,0,232,233,5,1088,
0,0,233,234,5,1091,0,0,234,235,5,1082,0,0,235,236,5,1090,0,0,236,237,5,1091,
0,0,237,238,5,1088,0,0,238,239,5,1072,0,0,239,6,1,0,0,0,240,241,5,1087,0,
0,241,242,5,1077,0,0,242,243,5,1088,0,0,243,244,5,1077,0,0,244,245,5,1073,
0,0,245,246,5,1088,0,0,246,247,5,1072,0,0,247,248,5,1090,0,0,248,249,5,1080,
0,0,249,8,1,0,0,0,250,251,5,61,0,0,251,252,5,61,0,0,252,10,1,0,0,0,253,254,
5,33,0,0,254,255,5,61,0,0,255,12,1,0,0,0,256,257,5,62,0,0,257,258,5,61,0,
0,258,14,1,0,0,0,259,260,5,60,0,0,260,261,5,61,0,0,261,16,1,0,0,0,262,263,
5,62,0,0,263,18,1,0,0,0,264,265,5,60,0,0,265,20,1,0,0,0,266,267,5,1103,0,
0,267,268,5,1082,0,0,268,269,5,1097,0,0,269,270,5,1086,0,0,270,22,1,0,0,
0,271,272,5,1095,0,0,272,273,5,1077,0,0,273,274,5,1082,0,0,274,275,5,1072,
0,0,275,276,5,1090,0,0,276,277,5,1080,0,0,277,24,1,0,0,0,278,279,5,1074,
0,0,279,280,5,1079,0,0,280,281,5,1103,0,0,281,282,5,1090,0,0,282,283,5,1080,
0,0,283,26,1,0,0,0,284,285,5,1074,0,0,285,286,5,1079,0,0,286,287,5,1103,
0,0,287,288,5,1090,0,0,288,289,5,1080,0,0,289,290,5,32,0,0,290,291,5,1087,
0,0,291,292,5,1072,0,0,292,293,5,1082,0,0,293,28,1,0,0,0,294,295,5,1074,
0,0,295,296,5,1079,0,0,296,297,5,1103,0,0,297,298,5,1090,0,0,298,299,5,1080,
0,0,299,300,5,32,0,0,300,301,5,1092,0,0,301,302,5,1072,0,0,302,303,5,1081,
0,0,303,304,5,1083,0,0,304,30,1,0,0,0,305,306,5,1076,0,0,306,307,5,1072,
0,0,307,308,5,1090,0,0,308,309,5,1080,0,0,309,32,1,0,0,0,310,311,5,1103,
0,0,311,312,5,1082,0,0,312,34,1,0,0,0,313,314,5,1108,0,0,314,36,1,0,0,0,
315,316,5,1074,0,0,316,317,5,1077,0,0,317,318,5,1088,0,0,318,319,5,1085,
0,0,319,320,5,1091,0,0,320,321,5,1090,0,0,321,322,5,1080,0,0,322,38,1,0,
0,0,323,324,5,1090,0,0,324,325,5,1088,0,0,325,326,5,1080,0,0,326,327,5,1074,
0,0,327,328,5,1072,0,0,328,329,5,1083,0,0,329,330,5,1072,0,0,330,40,1,0,
0,0,331,332,5,1110,0,0,332,42,1,0,0,0,333,334,5,1072,0,0,334,335,5,1073,
0,0,335,336,5,1086,0,0,336,44,1,0,0,0,337,338,5,1089,0,0,338,339,5,1087,
0,0,339,340,5,1088,0,0,340,341,5,1086,0,0,341,342,5,1073,0,0,342,343,5,1091,
0,0,343,344,5,1074,0,0,344,345,5,1072,0,0,345,346,5,1090,0,0,346,347,5,1080,
0,0,347,46,1,0,0,0,348,349,5,1079,0,0,349,350,5,1083,0,0,350,351,5,1086,
0,0,351,352,5,1074,0,0,352,353,5,1080,0,0,353,354,5,1090,0,0,354,355,5,1080,
0,0,355,48,1,0,0,0,356,357,5,1110,0,0,357,358,5,1085,0,0,358,359,5,1072,
0,0,359,360,5,1082,0,0,360,361,5,1096,0,0,361,362,5,1077,0,0,362,50,1,0,
0,0,363,364,5,1074,0,0,364,365,5,1087,0,0,365,366,5,1072,0,0,366,367,5,1089,
0,0,367,368,5,1090,0,0,368,369,5,1080,0,0,369,52,1,0,0,0,370,371,5,1087,
0,0,371,372,5,1086,0,0,372,373,5,1082,0,0,373,374,5,1080,0,0,374,54,1,0,
0,0,375,376,5,1084,0,0,376,377,5,1086,0,0,377,378,5,1076,0,0,378,379,5,1091,
0,0,379,380,5,1083,0,0,380,381,5,1100,0,0,381,56,1,0,0,0,382,383,5,63,0,
0,383,58,1,0,0,0,384,385,5,1088,0,0,385,386,5,1110,0,0,386,387,5,1074,0,
0,387,388,5,1085,0,0,388,389,5,1086,0,0,389,60,1,0,0,0,390,391,5,1073,0,
0,391,392,5,1110,0,0,392,393,5,1083,0,0,393,394,5,1100,0,0,394,395,5,1096,
0,0,395,396,5,1077,0,0,396,62,1,0,0,0,397,398,5,1084,0,0,398,399,5,1077,
0,0,399,400,5,1085,0,0,400,401,5,1096,0,0,401,402,5,1077,0,0,402,64,1,0,
0,0,403,404,5,1085,0,0,404,405,5,1077,0,0,405,406,5,32,0,0,406,407,5,1073,
0,0,407,408,5,1110,0,0,408,409,5,1083,0,0,409,410,5,1100,0,0,410,411,5,1096,
0,0,411,412,5,1077,0,0,412,66,1,0,0,0,413,414,5,1085,0,0,414,415,5,1077,
0,0,415,416,5,32,0,0,416,417,5,1084,0,0,417,418,5,1077,0,0,418,419,5,1085,
0,0,419,420,5,1096,0,0,420,421,5,1077,0,0,421,68,1,0,0,0,422,423,5,1085,
0,0,423,424,5,1077,0,0,424,425,5,32,0,0,425,426,5,1088,0,0,426,427,5,1110,
0,0,427,428,5,1074,0,0,428,429,5,1085,0,0,429,430,5,1086,0,0,430,70,1,0,
0,0,431,432,5,1085,0,0,432,433,5,1077,0,0,433,434,5,32,0,0,434,435,5,1108,
0,0,435,72,1,0,0,0,436,437,5,1084,0,0,437,438,5,1110,0,0,438,439,5,1089,
0,0,439,440,5,1090,0,0,440,441,5,1080,0,0,441,442,5,1090,0,0,442,443,5,1100,
0,0,443,74,1,0,0,0,444,445,5,1085,0,0,445,446,5,1077,0,0,446,447,5,32,0,
0,447,448,5,1084,0,0,448,449,5,1110,0,0,449,450,5,1089,0,0,450,451,5,1090,
0,0,451,452,5,1080,0,0,452,453,5,1090,0,0,453,454,5,1100,0,0,454,76,1,0,
0,0,455,456,5,46,0,0,456,457,5,42,0,0,457,78,1,0,0,0,458,459,5,1084,0,0,
459,460,5,1072,0,0,460,461,5,1082,0,0,461,462,5,1077,0,0,462,463,5,1090,
0,0,463,80,1,0,0,0,464,465,5,1074,0,0,465,466,5,1090,0,0,466,467,5,1110,
0,0,467,468,5,1083,0,0,468,469,5,1102,0,0,469,470,5,1108,0,0,470,82,1,0,
0,0,471,472,5,1074,0,0,472,473,5,1090,0,0,473,474,5,1110,0,0,474,475,5,1083,
0,0,475,476,5,1080,0,0,476,477,5,1090,0,0,477,478,5,1080,0,0,478,84,1,0,
0,0,479,480,5,106,0,0,480,481,5,115,0,0,481,86,1,0,0,0,482,483,5,1082,0,
0,483,484,5,1086,0,0,484,485,5,1083,0,0,485,486,5,1080,0,0,486,88,1,0,0,
0,487,488,5,1090,0,0,488,489,5,1072,0,0,489,90,1,0,0,0,490,491,5,46,0,0,
491,492,5,46,0,0,492,493,5,46,0,0,493,92,1,0,0,0,494,495,5,46,0,0,495,496,
5,46,0,0,496,94,1,0,0,0,497,498,5,45,0,0,498,499,5,62,0,0,499,96,1,0,0,0,
500,501,7,0,0,0,501,502,1,0,0,0,502,503,6,48,0,0,503,98,1,0,0,0,504,506,
5,13,0,0,505,504,1,0,0,0,505,506,1,0,0,0,506,507,1,0,0,0,507,508,5,10,0,
0,508,100,1,0,0,0,509,510,5,45,0,0,510,511,5,45,0,0,511,102,1,0,0,0,512,
513,5,43,0,0,513,514,5,43,0,0,514,104,1,0,0,0,515,516,5,40,0,0,516,106,1,
0,0,0,517,518,5,41,0,0,518,108,1,0,0,0,519,520,5,91,0,0,520,110,1,0,0,0,
521,522,5,93,0,0,522,112,1,0,0,0,523,524,5,44,0,0,524,114,1,0,0,0,525,526,
5,61,0,0,526,116,1,0,0,0,527,528,5,58,0,0,528,529,5,61,0,0,529,118,1,0,0,
0,530,531,5,43,0,0,531,532,5,61,0,0,532,120,1,0,0,0,533,534,5,45,0,0,534,
535,5,61,0,0,535,122,1,0,0,0,536,537,5,42,0,0,537,538,5,61,0,0,538,124,1,
0,0,0,539,540,5,47,0,0,540,541,5,61,0,0,541,126,1,0,0,0,542,543,5,47,0,0,
543,544,5,47,0,0,544,545,5,61,0,0,545,128,1,0,0,0,546,547,5,37,0,0,547,548,
5,61,0,0,548,130,1,0,0,0,549,550,5,124,0,0,550,551,5,61,0,0,551,132,1,0,
0,0,552,553,5,38,0,0,553,554,5,61,0,0,554,134,1,0,0,0,555,556,5,60,0,0,556,
557,5,60,0,0,557,558,5,61,0,0,558,136,1,0,0,0,559,560,5,62,0,0,560,561,5,
62,0,0,561,562,5,61,0,0,562,138,1,0,0,0,563,564,5,94,0,0,564,565,5,61,0,
0,565,140,1,0,0,0,566,567,5,42,0,0,567,568,5,42,0,0,568,569,5,61,0,0,569,
142,1,0,0,0,570,571,5,124,0,0,571,572,5,124,0,0,572,573,5,61,0,0,573,144,
1,0,0,0,574,575,5,38,0,0,575,576,5,38,0,0,576,577,5,61,0,0,577,146,1,0,0,
0,578,579,5,63,0,0,579,580,5,63,0,0,580,581,5,61,0,0,581,148,1,0,0,0,582,
583,5,43,0,0,583,150,1,0,0,0,584,585,5,45,0,0,585,152,1,0,0,0,586,587,5,
42,0,0,587,154,1,0,0,0,588,589,5,47,0,0,589,156,1,0,0,0,590,591,5,58,0,0,
591,158,1,0,0,0,592,593,5,46,0,0,593,160,1,0,0,0,594,595,5,33,0,0,595,162,
1,0,0,0,596,597,5,126,0,0,597,164,1,0,0,0,598,599,5,37,0,0,599,166,1,0,0,
0,600,601,5,47,0,0,601,602,5,47,0,0,602,168,1,0,0,0,603,604,5,42,0,0,604,
605,5,42,0,0,605,170,1,0,0,0,606,607,5,94,0,0,607,172,1,0,0,0,608,609,5,
124,0,0,609,610,5,124,0,0,610,174,1,0,0,0,611,612,5,38,0,0,612,613,5,38,
0,0,613,176,1,0,0,0,614,615,5,124,0,0,615,178,1,0,0,0,616,617,5,38,0,0,617,
180,1,0,0,0,618,619,5,60,0,0,619,620,5,60,0,0,620,182,1,0,0,0,621,622,5,
62,0,0,622,623,5,62,0,0,623,184,1,0,0,0,624,625,5,48,0,0,625,626,5,120,0,
0,626,186,1,0,0,0,627,631,3,213,106,0,628,630,3,215,107,0,629,628,1,0,0,
0,630,633,1,0,0,0,631,629,1,0,0,0,631,632,1,0,0,0,632,188,1,0,0,0,633,631,
1,0,0,0,634,641,3,193,96,0,635,641,3,191,95,0,636,641,3,195,97,0,637,641,
3,199,99,0,638,641,3,197,98,0,639,641,3,201,100,0,640,634,1,0,0,0,640,635,
1,0,0,0,640,636,1,0,0,0,640,637,1,0,0,0,640,638,1,0,0,0,640,639,1,0,0,0,
641,190,1,0,0,0,642,644,3,211,105,0,643,642,1,0,0,0,644,645,1,0,0,0,645,
643,1,0,0,0,645,646,1,0,0,0,646,192,1,0,0,0,647,648,3,191,95,0,648,649,5,
46,0,0,649,650,3,191,95,0,650,194,1,0,0,0,651,652,5,48,0,0,652,653,5,120,
0,0,653,656,1,0,0,0,654,657,3,211,105,0,655,657,7,1,0,0,656,654,1,0,0,0,
656,655,1,0,0,0,657,658,1,0,0,0,658,656,1,0,0,0,658,659,1,0,0,0,659,196,
1,0,0,0,660,661,5,48,0,0,661,662,5,1096,0,0,662,665,1,0,0,0,663,666,3,211,
105,0,664,666,7,2,0,0,665,663,1,0,0,0,665,664,1,0,0,0,666,667,1,0,0,0,667,
665,1,0,0,0,667,668,1,0,0,0,668,198,1,0,0,0,669,670,5,48,0,0,670,671,5,98,
0,0,671,673,1,0,0,0,672,674,2,48,49,0,673,672,1,0,0,0,674,675,1,0,0,0,675,
673,1,0,0,0,675,676,1,0,0,0,676,200,1,0,0,0,677,678,5,48,0,0,678,679,5,1076,
0,0,679,681,1,0,0,0,680,682,2,48,49,0,681,680,1,0,0,0,682,683,1,0,0,0,683,
681,1,0,0,0,683,684,1,0,0,0,684,202,1,0,0,0,685,690,5,34,0,0,686,689,8,3,
0,0,687,689,3,217,108,0,688,686,1,0,0,0,688,687,1,0,0,0,689,692,1,0,0,0,
690,688,1,0,0,0,690,691,1,0,0,0,691,693,1,0,0,0,692,690,1,0,0,0,693,694,
5,34,0,0,694,204,1,0,0,0,695,696,5,59,0,0,696,697,5,59,0,0,697,698,5,59,
0,0,698,703,1,0,0,0,699,702,3,205,102,0,700,702,9,0,0,0,701,699,1,0,0,0,
701,700,1,0,0,0,702,705,1,0,0,0,703,704,1,0,0,0,703,701,1,0,0,0,704,706,
1,0,0,0,705,703,1,0,0,0,706,707,5,59,0,0,707,708,5,59,0,0,708,709,5,59,0,
0,709,710,1,0,0,0,710,711,6,102,0,0,711,206,1,0,0,0,712,713,5,59,0,0,713,
714,5,59,0,0,714,719,1,0,0,0,715,718,3,207,103,0,716,718,8,4,0,0,717,715,
1,0,0,0,717,716,1,0,0,0,718,721,1,0,0,0,719,717,1,0,0,0,719,720,1,0,0,0,
720,722,1,0,0,0,721,719,1,0,0,0,722,723,6,103,0,0,723,208,1,0,0,0,724,725,
5,59,0,0,725,726,5,45,0,0,726,727,5,45,0,0,727,732,1,0,0,0,728,731,3,209,
104,0,729,731,9,0,0,0,730,728,1,0,0,0,730,729,1,0,0,0,731,734,1,0,0,0,732,
733,1,0,0,0,732,730,1,0,0,0,733,735,1,0,0,0,734,732,1,0,0,0,735,736,5,45,
0,0,736,737,5,45,0,0,737,738,5,59,0,0,738,739,1,0,0,0,739,740,6,104,0,0,
740,210,1,0,0,0,741,742,2,48,57,0,742,212,1,0,0,0,743,744,7,5,0,0,744,214,
1,0,0,0,745,749,3,213,106,0,746,749,7,6,0,0,747,749,3,213,106,0,748,745,
1,0,0,0,748,746,1,0,0,0,748,747,1,0,0,0,749,216,1,0,0,0,750,751,5,92,0,0,
751,752,7,7,0,0,752,218,1,0,0,0,20,0,505,631,640,645,656,658,665,667,675,
683,688,690,701,703,717,719,730,732,748,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class DiiaLexer extends antlr4.Lexer {

    static grammarFileName = "DiiaLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'\\u043A\\u0456\\u043D\\u0435\\u0446\\u044C'", 
                         "'\\u0434\\u0456\\u044F'", "'\\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u0443\\u0440\\u0430'", 
                         "'\\u043F\\u0435\\u0440\\u0435\\u0431\\u0440\\u0430\\u0442\\u0438'", 
                         "'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'\\u044F\\u043A\\u0449\\u043E'", 
                         "'\\u0447\\u0435\\u043A\\u0430\\u0442\\u0438'", 
                         "'\\u0432\\u0437\\u044F\\u0442\\u0438'", "'\\u0432\\u0437\\u044F\\u0442\\u0438 \\u043F\\u0430\\u043A'", 
                         "'\\u0432\\u0437\\u044F\\u0442\\u0438 \\u0444\\u0430\\u0439\\u043B'", 
                         "'\\u0434\\u0430\\u0442\\u0438'", "'\\u044F\\u043A'", 
                         "'\\u0454'", "'\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u0438'", 
                         "'\\u0442\\u0440\\u0438\\u0432\\u0430\\u043B\\u0430'", 
                         "'\\u0456'", "'\\u0430\\u0431\\u043E'", "'\\u0441\\u043F\\u0440\\u043E\\u0431\\u0443\\u0432\\u0430\\u0442\\u0438'", 
                         "'\\u0437\\u043B\\u043E\\u0432\\u0438\\u0442\\u0438'", 
                         "'\\u0456\\u043D\\u0430\\u043A\\u0448\\u0435'", 
                         "'\\u0432\\u043F\\u0430\\u0441\\u0442\\u0438'", 
                         "'\\u043F\\u043E\\u043A\\u0438'", "'\\u043C\\u043E\\u0434\\u0443\\u043B\\u044C'", 
                         "'?'", "'\\u0440\\u0456\\u0432\\u043D\\u043E'", 
                         "'\\u0431\\u0456\\u043B\\u044C\\u0448\\u0435'", 
                         "'\\u043C\\u0435\\u043D\\u0448\\u0435'", "'\\u043D\\u0435 \\u0431\\u0456\\u043B\\u044C\\u0448\\u0435'", 
                         "'\\u043D\\u0435 \\u043C\\u0435\\u043D\\u0448\\u0435'", 
                         "'\\u043D\\u0435 \\u0440\\u0456\\u0432\\u043D\\u043E'", 
                         "'\\u043D\\u0435 \\u0454'", "'\\u043C\\u0456\\u0441\\u0442\\u0438\\u0442\\u044C'", 
                         "'\\u043D\\u0435 \\u043C\\u0456\\u0441\\u0442\\u0438\\u0442\\u044C'", 
                         "'.*'", "'\\u043C\\u0430\\u043A\\u0435\\u0442'", 
                         "'\\u0432\\u0442\\u0456\\u043B\\u044E\\u0454'", 
                         "'\\u0432\\u0442\\u0456\\u043B\\u0438\\u0442\\u0438'", 
                         "'js'", "'\\u043A\\u043E\\u043B\\u0438'", "'\\u0442\\u0430'", 
                         "'...'", "'..'", "'->'", null, null, "'--'", "'++'", 
                         "'('", "')'", "'['", "']'", "','", "'='", "':='", 
                         "'+='", "'-='", "'*='", "'/='", "'//='", "'%='", 
                         "'|='", "'&='", "'<<='", "'>>='", "'^='", "'**='", 
                         "'||='", "'&&='", "'??='", "'+'", "'-'", "'*'", 
                         "'/'", "':'", "'.'", "'!'", "'~'", "'%'", "'//'", 
                         "'**'", "'^'", "'||'", "'&&'", "'|'", "'&'", "'<<'", 
                         "'>>'", "'0x'" ];
	static symbolicNames = [ null, "END", "DIIA", "STRUCTURE", "FOR", "EQ", 
                          "NOT_EQ", "GREATER_EQ", "SMALLER_EQ", "GREATER", 
                          "SMALLER", "IF", "WAIT", "TAKE", "TAKE_PAK", "TAKE_FILE", 
                          "GIVE", "AS", "IS", "RETURN", "ASYNC", "AND", 
                          "OR", "TRY", "CATCH", "ELSE", "THROW", "WHILE", 
                          "MODULE", "TERNARY", "EQ_WORD", "GR_WORD", "SM_WORD", 
                          "NOT_GR_WORD", "NOT_SM_WORD", "NOT_EQ_WORD", "NOT_IS_WORD", 
                          "HAS_IS_WORD", "NOT_HAS_IS_WORD", "STAR_ALL", 
                          "MOCKUP", "IMPLEMENTS", "IMPLEMENT", "EVAL", "WHEN", 
                          "TA", "SPREAD", "FROMTO", "FARROW", "SKIP_SPACES", 
                          "NL", "DECREMENT", "INCREMENT", "OPEN_PAREN", 
                          "CLOSE_PAREN", "OPEN_ARRAY", "CLOSE_ARRAY", "COMMA", 
                          "ASSIGN", "ASSIGN_PARENT", "ASSIGN_ADD", "ASSIGN_SUB", 
                          "ASSIGN_MUL", "ASSIGN_DIV", "ASSIGN_DIVDIV", "ASSIGN_MOD", 
                          "ASSIGN_BW_OR", "ASSIGN_BW_AND", "ASSIGN_BW_SHIFT_LEFT", 
                          "ASSIGN_BW_SHIFT_RIGHT", "ASSIGN_XOR", "ASSIGN_POW", 
                          "ASSIGN_OR", "ASSIGN_AND", "ASSIGN_IF", "PLUS", 
                          "MINUS", "MUL", "DIV", "COLON", "DOT", "NOT", 
                          "TILDA", "PERCENT", "DIVDIV", "POW", "XOR", "OR_SYM", 
                          "AND_SYM", "OR_BW", "AND_BW", "BW_SHIFT_LEFT", 
                          "BW_SHIFT_RIGHT", "HEX_START", "ID", "NUMBER", 
                          "INTEGER", "FLOAT", "HEX", "HEXUKR", "BINNUM", 
                          "BINNUMUKR", "STRING", "COMMENT", "LINE_COMMENT", 
                          "OLD_COMMENT" ];
	static ruleNames = [ "END", "DIIA", "STRUCTURE", "FOR", "EQ", "NOT_EQ", 
                      "GREATER_EQ", "SMALLER_EQ", "GREATER", "SMALLER", 
                      "IF", "WAIT", "TAKE", "TAKE_PAK", "TAKE_FILE", "GIVE", 
                      "AS", "IS", "RETURN", "ASYNC", "AND", "OR", "TRY", 
                      "CATCH", "ELSE", "THROW", "WHILE", "MODULE", "TERNARY", 
                      "EQ_WORD", "GR_WORD", "SM_WORD", "NOT_GR_WORD", "NOT_SM_WORD", 
                      "NOT_EQ_WORD", "NOT_IS_WORD", "HAS_IS_WORD", "NOT_HAS_IS_WORD", 
                      "STAR_ALL", "MOCKUP", "IMPLEMENTS", "IMPLEMENT", "EVAL", 
                      "WHEN", "TA", "SPREAD", "FROMTO", "FARROW", "SKIP_SPACES", 
                      "NL", "DECREMENT", "INCREMENT", "OPEN_PAREN", "CLOSE_PAREN", 
                      "OPEN_ARRAY", "CLOSE_ARRAY", "COMMA", "ASSIGN", "ASSIGN_PARENT", 
                      "ASSIGN_ADD", "ASSIGN_SUB", "ASSIGN_MUL", "ASSIGN_DIV", 
                      "ASSIGN_DIVDIV", "ASSIGN_MOD", "ASSIGN_BW_OR", "ASSIGN_BW_AND", 
                      "ASSIGN_BW_SHIFT_LEFT", "ASSIGN_BW_SHIFT_RIGHT", "ASSIGN_XOR", 
                      "ASSIGN_POW", "ASSIGN_OR", "ASSIGN_AND", "ASSIGN_IF", 
                      "PLUS", "MINUS", "MUL", "DIV", "COLON", "DOT", "NOT", 
                      "TILDA", "PERCENT", "DIVDIV", "POW", "XOR", "OR_SYM", 
                      "AND_SYM", "OR_BW", "AND_BW", "BW_SHIFT_LEFT", "BW_SHIFT_RIGHT", 
                      "HEX_START", "ID", "NUMBER", "INTEGER", "FLOAT", "HEX", 
                      "HEXUKR", "BINNUM", "BINNUMUKR", "STRING", "COMMENT", 
                      "LINE_COMMENT", "OLD_COMMENT", "DIGIT", "ID_START", 
                      "ID_CONTINUE", "ESCAPE_CHAR" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

DiiaLexer.EOF = antlr4.Token.EOF;
DiiaLexer.END = 1;
DiiaLexer.DIIA = 2;
DiiaLexer.STRUCTURE = 3;
DiiaLexer.FOR = 4;
DiiaLexer.EQ = 5;
DiiaLexer.NOT_EQ = 6;
DiiaLexer.GREATER_EQ = 7;
DiiaLexer.SMALLER_EQ = 8;
DiiaLexer.GREATER = 9;
DiiaLexer.SMALLER = 10;
DiiaLexer.IF = 11;
DiiaLexer.WAIT = 12;
DiiaLexer.TAKE = 13;
DiiaLexer.TAKE_PAK = 14;
DiiaLexer.TAKE_FILE = 15;
DiiaLexer.GIVE = 16;
DiiaLexer.AS = 17;
DiiaLexer.IS = 18;
DiiaLexer.RETURN = 19;
DiiaLexer.ASYNC = 20;
DiiaLexer.AND = 21;
DiiaLexer.OR = 22;
DiiaLexer.TRY = 23;
DiiaLexer.CATCH = 24;
DiiaLexer.ELSE = 25;
DiiaLexer.THROW = 26;
DiiaLexer.WHILE = 27;
DiiaLexer.MODULE = 28;
DiiaLexer.TERNARY = 29;
DiiaLexer.EQ_WORD = 30;
DiiaLexer.GR_WORD = 31;
DiiaLexer.SM_WORD = 32;
DiiaLexer.NOT_GR_WORD = 33;
DiiaLexer.NOT_SM_WORD = 34;
DiiaLexer.NOT_EQ_WORD = 35;
DiiaLexer.NOT_IS_WORD = 36;
DiiaLexer.HAS_IS_WORD = 37;
DiiaLexer.NOT_HAS_IS_WORD = 38;
DiiaLexer.STAR_ALL = 39;
DiiaLexer.MOCKUP = 40;
DiiaLexer.IMPLEMENTS = 41;
DiiaLexer.IMPLEMENT = 42;
DiiaLexer.EVAL = 43;
DiiaLexer.WHEN = 44;
DiiaLexer.TA = 45;
DiiaLexer.SPREAD = 46;
DiiaLexer.FROMTO = 47;
DiiaLexer.FARROW = 48;
DiiaLexer.SKIP_SPACES = 49;
DiiaLexer.NL = 50;
DiiaLexer.DECREMENT = 51;
DiiaLexer.INCREMENT = 52;
DiiaLexer.OPEN_PAREN = 53;
DiiaLexer.CLOSE_PAREN = 54;
DiiaLexer.OPEN_ARRAY = 55;
DiiaLexer.CLOSE_ARRAY = 56;
DiiaLexer.COMMA = 57;
DiiaLexer.ASSIGN = 58;
DiiaLexer.ASSIGN_PARENT = 59;
DiiaLexer.ASSIGN_ADD = 60;
DiiaLexer.ASSIGN_SUB = 61;
DiiaLexer.ASSIGN_MUL = 62;
DiiaLexer.ASSIGN_DIV = 63;
DiiaLexer.ASSIGN_DIVDIV = 64;
DiiaLexer.ASSIGN_MOD = 65;
DiiaLexer.ASSIGN_BW_OR = 66;
DiiaLexer.ASSIGN_BW_AND = 67;
DiiaLexer.ASSIGN_BW_SHIFT_LEFT = 68;
DiiaLexer.ASSIGN_BW_SHIFT_RIGHT = 69;
DiiaLexer.ASSIGN_XOR = 70;
DiiaLexer.ASSIGN_POW = 71;
DiiaLexer.ASSIGN_OR = 72;
DiiaLexer.ASSIGN_AND = 73;
DiiaLexer.ASSIGN_IF = 74;
DiiaLexer.PLUS = 75;
DiiaLexer.MINUS = 76;
DiiaLexer.MUL = 77;
DiiaLexer.DIV = 78;
DiiaLexer.COLON = 79;
DiiaLexer.DOT = 80;
DiiaLexer.NOT = 81;
DiiaLexer.TILDA = 82;
DiiaLexer.PERCENT = 83;
DiiaLexer.DIVDIV = 84;
DiiaLexer.POW = 85;
DiiaLexer.XOR = 86;
DiiaLexer.OR_SYM = 87;
DiiaLexer.AND_SYM = 88;
DiiaLexer.OR_BW = 89;
DiiaLexer.AND_BW = 90;
DiiaLexer.BW_SHIFT_LEFT = 91;
DiiaLexer.BW_SHIFT_RIGHT = 92;
DiiaLexer.HEX_START = 93;
DiiaLexer.ID = 94;
DiiaLexer.NUMBER = 95;
DiiaLexer.INTEGER = 96;
DiiaLexer.FLOAT = 97;
DiiaLexer.HEX = 98;
DiiaLexer.HEXUKR = 99;
DiiaLexer.BINNUM = 100;
DiiaLexer.BINNUMUKR = 101;
DiiaLexer.STRING = 102;
DiiaLexer.COMMENT = 103;
DiiaLexer.LINE_COMMENT = 104;
DiiaLexer.OLD_COMMENT = 105;



